2023-12-06 11:53:30,483 INFO: Potterylog startup [in /Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/app/__init__.py:44]
2023-12-06 11:53:31,567 ERROR: Exception on /api/pots [GET] [in /Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py:1741]
Traceback (most recent call last):
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask_cors/extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/app/controller.py", line 56, in get_pots
    return jsonify(pots_schema.dump(pots))
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 549, in dump
    result = self._serialize(processed_obj, many=many)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 511, in _serialize
    return [
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 512, in <listcomp>
    self._serialize(d, many=False)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 517, in _serialize
    value = field_obj.serialize(attr_name, obj, accessor=self.get_attribute)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/fields.py", line 340, in serialize
    return self._serialize(value, attr, obj, **kwargs)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/fields.py", line 971, in _serialize
    ret = self._format_num(value)  # type: _T
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/fields.py", line 948, in _format_num
    return self.num_type(value)
ValueError: invalid literal for int() with base 10: ''
2023-12-06 11:59:44,988 INFO: Potterylog startup [in /Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/app/__init__.py:44]
2023-12-06 11:59:47,328 ERROR: Exception on /api/pots [GET] [in /Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py:1741]
Traceback (most recent call last):
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 2525, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 1822, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask_cors/extension.py", line 176, in wrapped_function
    return cors_after_request(app.make_response(f(*args, **kwargs)))
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 1820, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/flask/app.py", line 1796, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/app/controller.py", line 56, in get_pots
    return jsonify(pots_schema.dump(pots))
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 549, in dump
    result = self._serialize(processed_obj, many=many)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 511, in _serialize
    return [
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 512, in <listcomp>
    self._serialize(d, many=False)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 517, in _serialize
    value = field_obj.serialize(attr_name, obj, accessor=self.get_attribute)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/fields.py", line 340, in serialize
    return self._serialize(value, attr, obj, **kwargs)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/fields.py", line 639, in _serialize
    schema = self.schema
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/fields.py", line 582, in schema
    nested = self.nested()
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/app/schemas.py", line 13, in <lambda>
    clay_type = fields.Nested(lambda: ClaySchema(exclude=('pots',)), attribute="made_with_clay")
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow_sqlalchemy/load_instance_mixin.py", line 45, in __init__
    super().__init__(*args, **kwargs)
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 400, in __init__
    self._init_fields()
  File "/Users/dorritochan/Documents/IT_dojo/POTTERY/potterylog/backend/venv/lib/python3.9/site-packages/marshmallow/schema.py", line 979, in _init_fields
    raise ValueError(message)
ValueError: Invalid fields for <ClaySchema(many=False)>: OrderedSet(['pots']).
